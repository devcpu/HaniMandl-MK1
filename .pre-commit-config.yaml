# ESP32/C++ optimierte Pre-commit Konfiguration
# See https://pre-commit.com for more information

fail_fast: false

repos:
# ============================================================================
# BASIC FILE OPERATIONS
# ============================================================================
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v6.0.0  # Updated version
  hooks:
  - id: trailing-whitespace
  - id: end-of-file-fixer
  - id: check-added-large-files
    args: ['--maxkb=2048']
  - id: check-case-conflict
  - id: check-symlinks
  - id: detect-private-key
  - id: mixed-line-ending
    args: ['--fix=lf']  # Force Unix line endings
  - id: check-merge-conflict
  - id: check-json
  - id: check-yaml
  - id: check-xml

# ============================================================================
# C++ SPECIFIC HOOKS
# ============================================================================
- repo: https://github.com/pre-commit/mirrors-clang-format
  rev: v21.1.2
  hooks:
  - id: clang-format
    exclude: (^attic|^\.pio|^build|^doc)
    args: [-style=Google, -i]

- repo: https://github.com/pocc/pre-commit-hooks
  rev: v1.3.5
  hooks:
  # Static Analysis
  - id: cppcheck
    exclude: (^attic|^\.pio|^build|^doc)
    args: [
      # Lokal: nur relevante Kategorien f端r schnelle R端ckmeldung
      --enable=warning,performance,style,
      --language=c++,
      --std=c++11,
      --inline-suppr,
      --suppressions-list=cppcheck-suppressions.txt,
      --error-exitcode=2
    ]

    # Hinweis CI (nicht hier aktiv):
    # cppcheck --enable=all,performance,style,portability,warning,cert --inconclusive \
    #   --force --project=compile_commands.json --xml --xml-version=2 \
    #   --suppressions-list=cppcheck-suppressions.txt src lib 2> cppcheck-report.xml

- repo: local
  hooks:
  - id: flawfinder
    name: Security Analysis (flawfinder)
    description: Run flawfinder security scanner
    entry: flawfinder
    args: [--error-level=4, --minlevel=2, src/, lib/]
    pass_filenames: false
    language: system

  # ESP32-spezifische Include-Checks (Ersatz f端r include-what-you-use)
  - id: esp32-include-check
    name: ESP32 Include Check
    description: Check for proper include practices in ESP32 code
    entry: bash
    args: [-c, 'find src lib -name "*.cpp" -o -name "*.h" | xargs grep -n "#include <.*\.h>" | grep -v Arduino.h | grep -v WiFi.h | grep -v "^.*:#include <[A-Z]" | head -5 | while read line; do echo "INFO: Local header with angle brackets: $line"; done || echo "Include style looks good"']
    pass_filenames: false
    language: system

# ============================================================================
# EMBEDDED SPECIFIC
# ============================================================================
- repo: local
  hooks:
  # Compilation Test
  - id: compile-esp32
    name: ESP32 Compilation Test
    description: Verify ESP32 code compiles
    entry: platformio run --environment esp32 --silent
    pass_filenames: false
    language: system
    stages: [pre-commit]

  # Check for Arduino-specific issues
  - id: arduino-lint
    name: Arduino Code Lint
    description: Check Arduino coding standards
    entry: bash
    args: [-c, 'find src lib -name "*.cpp" -o -name "*.h" | xargs grep -l "String " | head -5 | while read f; do echo "WARNING: Arduino String in $f - consider char arrays"; done || true']
    pass_filenames: false
    language: system

  # Memory usage check
  - id: memory-check
    name: Memory Usage Check
    description: Warn if memory usage is high
    entry: bash
    args: [-c, 'platformio run --environment esp32 --silent | grep -E "(RAM|Flash)" | tail -2 || true']
    pass_filenames: false
    language: system

# ============================================================================
# WEB ASSETS (f端r data/ Ordner)
# ============================================================================
- repo: https://github.com/pre-commit/mirrors-jshint
  rev: v2.13.6
  hooks:
  - id: jshint
    files: ^data/.*\.js$

# CSS Minification Check
- repo: local
  hooks:
  - id: css-size-check
    name: CSS Size Check
    description: Warn if CSS files are too large
    entry: bash
    args: [-c, 'find data -name "*.css" -size +10k -exec echo "WARNING: Large CSS file: {}" \;']
    pass_filenames: false
    language: system

# ============================================================================
# DOCUMENTATION
# ============================================================================
- repo: https://github.com/executablebooks/mdformat
  rev: 0.7.22
  hooks:
  - id: mdformat
    args: [--wrap=80]
    files: \.(md|markdown)$
    exclude: (^attic|^\.pio)

# ============================================================================
# SECURITY & COMPLIANCE
# ============================================================================
# - repo: https://github.com/Yelp/detect-secrets
#   rev: v1.5.0
#   hooks:
#   - id: detect-secrets
#     args: ['--baseline', '.secrets.baseline']
#     exclude: (^attic|^\.pio|package-lock\.json)
